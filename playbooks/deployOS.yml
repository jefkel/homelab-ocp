---
#- hosts: bastion
- hosts: all
  become: yes

  handlers:
  - name: Restart chronyd
    service:
      name: chronyd
      state: restarted
      enabled: yes

  tasks:
  - name: Patch OS
    yum:
      name: '*'
      state: latest
    register: os_patch

  - name: Add extra packages
    yum:
      name: '{{ item }}'
      state: installed
    with_items:
      - open-vm-tools
      - chrony
      - perl
      - net-tools
      - wget
      - git
      - bind-utils
      - bash-completion
      - kexec-tools
      - sos
      - psacct
      - libsemanage-python

  - name: Check for time Server
    check_mode: no
    shell: grep "central.cavenet.ca iburst" /etc/chrony.conf
    changed_when: false
    ignore_errors: true
    register: time_server
    failed_when: time_server.rc >= 2

  - name: insert Time Source
    lineinfile:
      path: /etc/chrony.conf
      insertafter: 'server 3\.centos\.pool\.ntp\.org iburst'
      line: 'server central.cavenet.ca iburst'
      state: present
    when: time_server.rc == 1
    notify: Restart chronyd

  - name: delete centos time sources
    lineinfile:
      path: /etc/chrony.conf
      regexp: 'centos\.pool\.ntp\.org'
      state: absent
    notify: Restart chronyd

  - name: Add public key to provisioned accounts
    authorized_key:
      user: "{{ item }}"
      state: present
      key: "{{ lookup('file', '/home/jkelly/.ssh/id_djk_rsa.pub' ) }}"
    with_items:
      - root
      - jkelly

  - name: enable nfs writing in SELinux
    seboolean:
      name: virt_use_nfs
      state: yes
      persistent: yes

  - name: push sudoers from localhost
    copy:
      src: sudoers
      dest: /etc/sudoers
      owner: root
      group: root
      mode: '0400'
      validate: visudo -cf %s

  - name: copy audit filter to host
    copy:
      src: test-audit-policy.yaml
      dest: /usr/local/etc/test-audit-policy.yaml
      owner: root
      group: root
      mode: '0644'
    when: "'masters' in group_names"

  - name: Reboot Server
    shell: shutdown -r +1
    when: os_patch.changed

  - name: Hold for Reboot
    wait_for_connection:
      timeout: 900
      delay: 120
      sleep: 5
    when: os_patch.changed

  - name: Install ansible with pip
    pip:
      name: ansible
      version: 2.6.14
    when: "'bastion' in group_names"

  - name: Pull openshift-ansible repo to bastion
    become_user: "{{ ansible_ssh_user }}"
    become: yes
    git:
      repo: "https://github.com/openshift/openshift-ansible"
      dest: ~/openshift-ansible/
      version: "release-{{ openshift_release }}"
    when: "'bastion' in group_names"
